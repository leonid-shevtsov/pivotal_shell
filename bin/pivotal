#!/usr/bin/env ruby

require 'optparse'
require 'pivotal_shell'
require 'pivotal_shell/configuration'
require 'pivotal_shell/cache'
require 'highline/import'
#require 'active_support/core_ext'

PivotalShell::Configuration.load

commands = [
  ['stories', 'show a list of stories'],
  ['story', 'show information about a specific story'],
  ['start', 'start a story'],
  ['finish', 'finish a story'],
  ['update', 'update stories status from the server'],
  ['reload', 'reload entire project from the server'],
  ['commithook', 'commit hook for git']
]

banner = "Pivotal command-line client #{PivotalShell::VERSION}\nUsage: pivotal COMMAND PARAMS\n\nAvailable commands:\n\n#{commands.map{|c, d| "#{c} - #{d}"}.join("\n")}\n\nRun pivotal COMMAND --help for more info on a specific command\n\n"

if ARGV.length==1 && ARGV[0]=='--version'
  puts "pivotal #{PivotalShell::VERSION}"
  exit
end

command = ARGV.shift

unless commands.map{|c| c[0]}.include?(command)
  puts banner
  exit
end

require "pivotal_shell/commands/#{command}"

command_class = PivotalShell::Commands.const_get(command[0,1].upcase+command[1..-1])

command_class.new(ARGV).execute
